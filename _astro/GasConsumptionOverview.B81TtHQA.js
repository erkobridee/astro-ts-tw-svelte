import{S as m,i as c,s as l,d as a,e as f,t as p,f as u,h,m as v,k as _,l as d,n as g,p as C,q as $,u as w}from"./ECharts.BfJ7rUUm.js";import{E as O}from"./EnergyOverviewChart.DfLbRnH8.js";import{g as y}from"./ChartLoadingSpinner.bNe3PTbO.js";import"./index.DgoW5roq.js";import"./colors.DRy8vmPD.js";import"./format.DTLDyVsJ.js";import"./dayjs.min.Cbbdfn5l.js";function k(n){let t,s,i;return s=new O({props:{timeseries:n[0],unit:"mÂ³",color:y,onclick:n[1]}}),{c(){t=$("div"),w(s.$$.fragment),this.h()},l(e){t=d(e,"DIV",{class:!0});var r=g(t);C(s.$$.fragment,r),r.forEach(a),this.h()},h(){_(t,"class","flex h-[300px] w-[600px]")},m(e,r){h(e,t,r),v(s,t,null),i=!0},p(e,[r]){const o={};r&1&&(o.timeseries=e[0]),s.$set(o)},i(e){i||(u(s.$$.fragment,e),i=!0)},o(e){p(s.$$.fragment,e),i=!1},d(e){e&&a(t),f(s)}}}function x(n,t,s){let{timeseries:i}=t;const e=r=>{console.log("GasConsumptionOverview.onChartClick timeserie:",r)};return n.$$set=r=>{"timeseries"in r&&s(0,i=r.timeseries)},[i,e]}class D extends m{constructor(t){super(),c(this,t,x,k,l,{timeseries:0})}}export{D as default};
