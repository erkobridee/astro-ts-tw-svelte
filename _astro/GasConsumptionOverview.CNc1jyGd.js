import{S as m,i as c,s as l,d as o,a as f,t as u,b as h,c as p,m as v,f as _,g as d,h as g,j as C,k as $,l as w}from"./ECharts.SLfbBKHq.js";import{E as O}from"./EnergyOverviewChart.BYuTHCZs.js";import{k}from"./ChartLoadingSpinner.9HWc-NSv.js";import"./index.B7R5YsXE.js";import"./colors.DRy8vmPD.js";import"./dayjs.min.2rai63wT.js";function y(n){let t,r,i;return r=new O({props:{timeseries:n[0],unit:"mÂ³",color:k,onclick:n[1]}}),{c(){t=$("div"),w(r.$$.fragment),this.h()},l(e){t=d(e,"DIV",{class:!0});var s=g(t);C(r.$$.fragment,s),s.forEach(o),this.h()},h(){_(t,"class","flex h-[300px] w-[600px]")},m(e,s){p(e,t,s),v(r,t,null),i=!0},p(e,[s]){const a={};s&1&&(a.timeseries=e[0]),r.$set(a)},i(e){i||(h(r.$$.fragment,e),i=!0)},o(e){u(r.$$.fragment,e),i=!1},d(e){e&&o(t),f(r)}}}function x(n,t,r){let{timeseries:i}=t;const e=s=>{console.log("GasConsumptionOverview.onChartClick timeserie:",s)};return n.$$set=s=>{"timeseries"in s&&r(0,i=s.timeseries)},[i,e]}class j extends m{constructor(t){super(),c(this,t,x,y,l,{timeseries:0})}}export{j as default};
