import{S as v,i as C,s as w,d as c,e as m,t as d,f as p,h as _,j as A,m as $,k as g,l as u,n as h,p as b,q as f,u as k,z as M,A as E,b as T,c as y,g as L}from"./ECharts.1qvfRhZw.js";import{E as O,U as S,A as U}from"./EnergyChart.B8FujiWy.js";import{T as D}from"./Toggle.BBsTGHwm.js";import{j as G}from"./ChartLoadingSpinner.BWOF1iWi.js";import"./dayjs.min.2rai63wT.js";import"./index.wir0LBdD.js";function H(o){let e,s='<li><button class="font-semibold">Months</button> <span>/</span></li> <li><button>Weeks</button> <span>/</span></li> <li><button>Days</button> <span>/</span></li> <li><button>Hours</button></li>';return{c(){e=f("ul"),e.innerHTML=s,this.h()},l(n){e=u(n,"UL",{class:!0,"data-svelte-h":!0}),E(e)!=="svelte-b2i39e"&&(e.innerHTML=s),this.h()},h(){g(e,"class","flex-inline flex gap-2")},m(n,i){_(n,e,i)},p:M,d(n){n&&c(e)}}}function I(o){let e,s,n;function i(t){o[4](t)}let a={id:"showAverageToggle",label:"show average mark line"};return o[1]!==void 0&&(a.checked=o[1]),e=new D({props:a}),T.push(()=>y(e,"checked",i)),{c(){k(e.$$.fragment)},l(t){b(e.$$.fragment,t)},m(t,r){$(e,t,r),n=!0},p(t,r){const l={};!s&&r&2&&(s=!0,l.checked=t[1],L(()=>s=!1)),e.$set(l)},i(t){n||(p(e.$$.fragment,t),n=!0)},o(t){d(e.$$.fragment,t),n=!1},d(t){m(e,t)}}}function j(o){let e,s,n,i;return n=new O({props:{timeseries:o[0].weeks,showAverageMarkline:o[1],onclick:o[3],color:G,unit:S.M3,aggregation:o[2],$$slots:{footer:[I],headerActions:[H]},$$scope:{ctx:o}}}),{c(){e=f("div"),s=f("div"),k(n.$$.fragment),this.h()},l(a){e=u(a,"DIV",{class:!0});var t=h(e);s=u(t,"DIV",{class:!0});var r=h(s);b(n.$$.fragment,r),r.forEach(c),t.forEach(c),this.h()},h(){g(s,"class","absolute top-0 right-0 bottom-0 left-0"),g(e,"class","relative grow")},m(a,t){_(a,e,t),A(e,s),$(n,s,null),i=!0},p(a,[t]){const r={};t&1&&(r.timeseries=a[0].weeks),t&2&&(r.showAverageMarkline=a[1]),t&34&&(r.$$scope={dirty:t,ctx:a}),n.$set(r)},i(a){i||(p(n.$$.fragment,a),i=!0)},o(a){d(n.$$.fragment,a),i=!1},d(a){a&&c(e),m(n)}}}function q(o,e,s){let{data:n}=e;const i=U.WEEK;let a=!1;const t=l=>{console.log("GasConsumption.onChartClick timeserie:",l)};function r(l){a=l,s(1,a)}return o.$$set=l=>{"data"in l&&s(0,n=l.data)},[n,a,i,t,r]}class R extends v{constructor(e){super(),C(this,e,q,j,w,{data:0})}}export{R as default};
